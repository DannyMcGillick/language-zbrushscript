{
    "scope": "text.zscript",
    "completions": [
        {
            "trigger": "FileExecute\tExecutes the specified plugin file (DLL). Output: Returns the result value which was returned by the executed routine. Returns zero if error",
            "contents": "[FileExecute, PluginTest.dll, ShowMsg, \"Hi There\"]"
        },
        {
            "trigger": "FileExecute\t (args)",
            "contents": "[FileExecute, \n\t File name including the extension (such as plugin.dll ), \n\t Routine to call, \n\t Optional text input, \n\t Optional number input, \n\t Optional memory block input, \n\t Optional memory block output\n]"
        },
        {
            "trigger": "FileExists\tCheck if a specific file exists. Output: Returns 1 if file exists. Returns zero if does not exists",
            "contents": "[FileExists, LargeImage.psd]"
        },
        {
            "trigger": "FileExists\t (args)",
            "contents": "[FileExists, \n\t File name including the extension (such as brush1.ztl )\n]"
        },
        {
            "trigger": "FileGetInfo\tRetrieve information about a specified file. Output: returns the requested information or zero if the file not found.\nProperty Indexes:\n1 = file size (in mb)\n2 -7 = Creation date: year, month(1-12), day, hour, minutes, seconds\n8 -13 = Modified date: year, month(1-12), day, hour, minutes, seconds\n14 -19 = Access date: year, month(1-12), day, hour, minutes, seconds",
            "contents": "[FileGetInfo, LargeImage.psd, 1]"
        },
        {
            "trigger": "FileGetInfo\t (args)",
            "contents": "[FileGetInfo, \n\t File name including extension (such as brush1.ztl), \n\tThe information requested index.\n]"
        },
        {
            "trigger": "FileNameAdvance\tIncrements the index value contained within a filename string Output: Updated file Name.",
            "contents": "[FileNameAdvance, \"image01.psd\"]"
        },
        {
            "trigger": "FileNameAdvance\t (args)",
            "contents": "[FileNameAdvance, \n\t Base file name, \n\t Number of digits (0-4) (i.e. 3: 001 ), \n\t Add 'Copy' string?(0:no, \n\t NonZero:yes)\n]"
        },
        {
            "trigger": "FileNameAsk\tAsks user for a file name Output: Result file name or an empty string if user canceled operation (Sub-Level only).",
            "contents": "[FileNameAsk, \"DXF(*.dxf)|*.dxf|OBJ(*.obj)|*.obj||\", , \"Please select a file to load...\"]"
        },
        {
            "trigger": "FileNameAsk\t (args)",
            "contents": "[FileNameAsk, \n\t Extension list (up to 3 extensions), \n\t Default fileName for SaveDialog. Name should be omitted for OpenDialog, \n\t Optional dialog title\n]"
        },
        {
            "trigger": "FileNameExtract\tExtracts filename components. Output: The extracted filename component/s.",
            "contents": "[FileNameExtract, fullFilePath, 2]"
        },
        {
            "trigger": "FileNameExtract\t (args)",
            "contents": "[FileNameExtract, \n\t File name (Full path), \n\t Component specifier (1:path, \n\t 2:name, \n\t 4:ext)\n]"
        },
        {
            "trigger": "FileNameGetLastTyped\tRetrieves the latest file name that was typed by the user in a Save/Load action Output: Latest file name that was typed by the user. Returned string will be empty if the user has canceled the action.",
            "contents": "[FileNameGetLastTyped]"
        },
        {
            "trigger": "FileNameGetLastTyped\t (args)",
            "contents": "[FileNameGetLastTyped\n]"
        },
        {
            "trigger": "FileNameGetLastUsed\tRetrieves the latest file name that was used (by the user or by ZBrush) in a Save/Load action Output: Latest file name that was used. Returned string will be empty if the user has canceled the action.",
            "contents": "[FileNameGetLastUsed]"
        },
        {
            "trigger": "FileNameGetLastUsed\t (args)",
            "contents": "[FileNameGetLastUsed\n]"
        },
        {
            "trigger": "FileNameMake\tCombines a base filename with an index number Output: Combined file name Variable",
            "contents": "[FileNameMake, Image.psd, 12]"
        },
        {
            "trigger": "FileNameMake\t (args)",
            "contents": "[FileNameMake, \n\t Base file name, \n\t Index, \n\t Number of numeric digits to use\n]"
        },
        {
            "trigger": "FileNameResolvePath\tResolves local path to full path Output: Full path.",
            "contents": "[FileNameResolvePath, LargeImage.psd]"
        },
        {
            "trigger": "FileNameResolvePath\t (args)",
            "contents": "[FileNameResolvePath, \n\t Local File Name\n]"
        },
        {
            "trigger": "FileNameSetNext\tPre-sets the file name that will be used in the next Save/Load action",
            "contents": "[FileNameSetNext, LargeImage.psd]"
        },
        {
            "trigger": "FileNameSetNext\t (args)",
            "contents": "[FileNameSetNext, \n\t File name including the extension (such as .psd ). If omitted the stored file name will be cleared.\n]"
        }
    ]
}